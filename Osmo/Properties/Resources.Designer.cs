//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Osmo.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Osmo.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [General]
        ///Name: [NAME]
        ///Author: [AUTHOR]
        ///Version: [VERSION]
        ///
        /////Please remember to remove &quot;//&quot; from some of options if you want them.
        /////For explanation of every part, see this thread http://osu.ppy.sh/forum/t/51694
        ///
        ///SliderBallFlip: 0
        ///CursorRotate: 1
        /////CursorTrailRotate: 0
        ///CursorExpand: 1
        ///CursorCentre: 1
        ///SliderBallFrames: 10
        /////SpinnerFadePlayfield: 1
        ///ComboBurstRandom : 0
        ///HitCircleOverlayAboveNumer: 1
        /////AnimationFramerate: 10
        /////CustomComboBurstSounds: 30,60,100,150,200,250,300
        /////SliderStyle:  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DefaulSkinIni {
            get {
                return ResourceManager.GetString("DefaulSkinIni", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [b]- General[/b]
        ///Skin-Name: [NAME]
        ///Author: [AUTHOR]
        ///Skin-Version: [VERSION]
        ///Size: [SIZE] MB
        ///Supported Gammemodes: (osu!, osu!mania, ctb, taiko)
        ///Tags: 
        ///
        ///[box=Changelog]
        ///[list]
        ///[*] [DATE]: First release[/list]
        ///[/box]
        ///
        ///[b]- Screenshots[/b]
        ///[box=Menu]
        ///[/box]
        ///
        ///[box=In-Game]
        ///[/box]
        ///
        ///[b]- Download-Mirrors[/b]
        ///
        ///
        ///[b](Last Update: [DATE])[/b]
        ///
        ///Additional Text here....
        /// </summary>
        internal static string DefaultTemplate {
            get {
                return ResourceManager.GetString("DefaultTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap emptyImage {
            get {
                object obj = ResourceManager.GetObject("emptyImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream emptySound {
            get {
                return ResourceManager.GetStream("emptySound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon icon {
            get {
                object obj = ResourceManager.GetObject("icon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #########################################################
        ///##                    Osmo log file                    ##
        ///##        Log created: [DATE] at [TIME]          ##
        ///##                                                     ##
        ///##     If you run into problems, please open a new     ##
        ///##   issue on the GitHub repo or post it on the osu!   ##
        ///##                       thread.                       ##
        ///##                                                     ##
        ///##  GitHub: https://github.com/BlackTasty/Osmo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LogStart {
            get {
                return ResourceManager.GetString("LogStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [centre][size=150][color=#cc5288][NAME][/color][/size]
        ///
        ///[size=150]{Write a short 1-3 sentence description of your skin here}[/size]
        ///
        ///[box=Screenshots]
        ///[size=150]Song selection
        ///[img]https://example.com/image-link-here.png[/img]
        ///Mod selection menu
        ///[img]https://example.com/image-link-here.png[/img]
        ///Ranking screen
        ///[img]https://example.com/image-link-here.png[/img]
        ///osu! gameplay
        ///[img]https://example.com/image-link-here.png[/img][/size][/box]
        ///[url=https://example.com/skin-download-link-here.osk]Downl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OfficialTemplate {
            get {
                return ResourceManager.GetString("OfficialTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] SkinIniSyntax {
            get {
                object obj = ResourceManager.GetObject("SkinIniSyntax", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # This files is based on the official wiki entry for Skinning: https://osu.ppy.sh/help/wiki/Skinning/Interface
        ///# Date: 03.06.2018
        ///# Entries are split like this:
        ///#    Name|Supported formats|Suggested SD size|Animatable;Contains hyphen;Maximum frames;Frame order|Version|Description|Flags
        ///#
        ///# Note: Only the name and supported formats are required. 
        ///#       If you want to use different values for different versions, write it like this:
        ///#       ranking-graph|.png|1.0:min308x156;min308x148
        ///#       You can [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SkinningCatch {
            get {
                return ResourceManager.GetString("SkinningCatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # This files is based on the official wiki entry for Skinning: https://osu.ppy.sh/help/wiki/Skinning/Interface
        ///# Date: 03.06.2018
        ///# Entries are split like this:
        ///#    Name|Supported formats|Suggested SD size|Animatable;Contains hyphen;Maximum frames;Frame order|Version|Description|Flags
        ///#
        ///# Note: Only the name and supported formats are required. 
        ///#       If you want to use different values for different versions, write it like this:
        ///#       ranking-graph|.png|1.0:min308x156;min308x148
        ///#       You can [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SkinningInterface {
            get {
                return ResourceManager.GetString("SkinningInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # This files is based on the official wiki entry for Skinning: https://osu.ppy.sh/help/wiki/Skinning/Interface
        ///# Date: 03.06.2018
        ///# Entries are split like this:
        ///#    Name|Supported formats|Suggested SD size|Animatable;Contains hyphen;Maximum frames;Frame order|Version|Description|Flags
        ///#
        ///# Note: Only the name and supported formats are required. 
        ///#       If you want to use different values for different versions, write it like this:
        ///#       ranking-graph|.png|1.0:min308x156;min308x148
        ///#       You can [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SkinningMania {
            get {
                return ResourceManager.GetString("SkinningMania", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # This files is based on the official wiki entry for Skinning: https://osu.ppy.sh/help/wiki/Skinning/Sounds
        ///# Date: 02.06.2018
        ///# Entries are split like this:
        ///#    Name|Supported extensions|Multiple sounds|Description
        ///#
        ///# You don&apos;t have to write the extension into the name! (Only a dot at the end)
        ///# Note: Only the name and supported extensions are required. 
        ///#       Multiple sounds: Accepts only true or false. Every other value results in false.
        ///#
        ///#       Description: If you want to add a linebreak, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SkinningSounds {
            get {
                return ResourceManager.GetString("SkinningSounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # This files is based on the official wiki entry for Skinning: https://osu.ppy.sh/help/wiki/Skinning/Interface
        ///# Date: 03.06.2018
        ///# Entries are split like this:
        ///#    Name|Supported formats|Suggested SD size|Animatable;Contains hyphen;Maximum frames;Frame order|Version|Description|Flags|Flags
        ///#
        ///# Note: Only the name and supported formats are required. 
        ///#       If you want to use different values for different versions, write it like this:
        ///#       ranking-graph|.png|1.0:min308x156;min308x148
        ///#       Y [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SkinningStandard {
            get {
                return ResourceManager.GetString("SkinningStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # This files is based on the official wiki entry for Skinning: https://osu.ppy.sh/help/wiki/Skinning/Interface
        ///# Date: 03.06.2018
        ///# Entries are split like this:
        ///#    Name|Supported formats|Suggested SD size|Animatable;Contains hyphen;Maximum frames;Frame order|Version|Description|Flags
        ///#
        ///# Note: Only the name and supported formats are required. 
        ///#       If you want to use different values for different versions, write it like this:
        ///#       ranking-graph|.png|1.0:min308x156;min308x148
        ///#       You can [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SkinningTaiko {
            get {
                return ResourceManager.GetString("SkinningTaiko", resourceCulture);
            }
        }
    }
}
