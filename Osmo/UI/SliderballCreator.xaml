<Grid x:Class="Osmo.UI.SliderballCreator"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:converter="clr-namespace:Osmo.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:Osmo.UI"
             xmlns:validation="clr-namespace:Osmo.ViewModel.Validation"
             xmlns:vm="clr-namespace:Osmo.ViewModel"
             Tag="{DynamicResource sidebar_tools_sbCreator}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid.DataContext>
        <vm:SBCreatorViewModel/>
    </Grid.DataContext>
    <Grid.Resources>
        <converter:StringNotEmptyConverter x:Key="StringNotEmpty"/>
    </Grid.Resources>
    <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition Width="150" />
        <ColumnDefinition Width="150" />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="12" />
        <RowDefinition Height="42" />
    </Grid.RowDefinitions>
    <material:Card Margin="8" Grid.ColumnSpan="3">
        <DockPanel>
            <Expander DockPanel.Dock="Top" Header="{DynamicResource sb_title_configuration}" IsExpanded="True" Background="{DynamicResource MaterialDesignCardBackground}">
                <Grid Height="104">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="82"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="103*"/>
                            <ColumnDefinition Width="479*"/>
                            <ColumnDefinition Width="120"/>
                        </Grid.ColumnDefinitions>
                        <!--<TextBox Margin="8" material:HintAssist.Hint="{DynamicResource sb_imagePath}" Text="{Binding OutputName}" Grid.ColumnSpan="2"/>-->
                        <Button Content="{DynamicResource search}" Grid.Column="2"
                        Command="{x:Static material:DialogHost.OpenDialogCommand}" Margin="0,7,0,10">
                            <Button.CommandParameter>
                                <local:FilePicker DialogClosed="FilePicker_DialogClosed" Title="{DynamicResource sb_selectImage}" 
                                                  DialogOpened="FilePicker_DialogOpened" FilterType="Image"/>
                            </Button.CommandParameter>
                        </Button>
                        <TextBox Margin="8" material:HintAssist.Hint="{DynamicResource sb_imagePath}" Text="{Binding SourceImagePath}"
                                 Grid.ColumnSpan="2"/>
                        <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.ColumnSpan="3" Margin="8">
                            <TextBox x:Name="txt_duration" Visibility="Collapsed" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"
                             material:HintAssist.Hint="{DynamicResource sb_hint_duration}"
                             Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0,0,16,0" 
                             >
                                <TextBox.Text>
                                    <Binding Mode="TwoWay" Path="AnimationDuration" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validation:NumericValidationRule ValidatesOnTargetUpdated="True"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBox
                             material:HintAssist.Hint="{DynamicResource sb_hint_fps}"
                             Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="16,0" 
                             >
                                <TextBox.Text>
                                    <Binding Mode="TwoWay" Path="NumberOfFrames" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validation:NumericValidationRule ValidatesOnTargetUpdated="True"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>
                        <Button Content="{DynamicResource generate}" Grid.Column="2" Grid.Row="1" Click="Generate_Click"
                                Margin="0,10" IsEnabled="{Binding IsGenerateEnabled}"/>
                    </Grid>
                    <Image Grid.Column="1" Margin="8" Source="{Binding SourceImage}"/>
                </Grid>
            </Expander>
            <Expander Header="{DynamicResource sb_title_preview}" IsExpanded="True" Background="{DynamicResource MaterialDesignCardBackground}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="150"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image Margin="8" Source="{Binding CurrentFrame}" Stretch="UniformToFill"/>

                    <ListView Grid.Column="2" Grid.RowSpan="3" VerticalAlignment="Stretch" SelectionMode="Single" ItemsSource="{Binding DummyNames}" SelectedIndex="{Binding CurrentFrameIndex, Mode=OneWayToSource}" SelectionChanged="ListView_SelectionChanged">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="{DynamicResource header_element}" DisplayMemberBinding="{Binding BindsDirectlyToSource=True}">
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <!--<GridSplitter HorizontalAlignment="Stretch" Grid.Column="1" Grid.RowSpan="3"/>-->
                    <DockPanel Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Center" Margin="8,0">
                        <Button Padding="0" DockPanel.Dock="Left" Margin="8,0" Foreground="{DynamicResource MaterialDesignBody}"
                            HorizontalAlignment="Left" IsEnabled="{Binding IsAnimationGenerated}"
                            ToolTip="{DynamicResource tip_animator_prevFrame}" Click="PreviousFrame_Click" Background="{x:Null}" BorderBrush="{x:Null}">
                            <material:PackIcon
                            Kind="StepBackward"
                            Height="24"
                            Width="24" />
                        </Button>
                        <Button Padding="0" DockPanel.Dock="Left" Margin="8,0"
                            HorizontalAlignment="Left" IsEnabled="{Binding IsAnimationGenerated}" Foreground="{DynamicResource MaterialDesignBody}"
                            Click="StartStopAnimation_Click"  Background="{x:Null}" BorderBrush="{x:Null}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="Background" Value="{x:Null}"/>
                                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                                    <Setter Property="ToolTip" Value="{DynamicResource tip_animator_play}"/>
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <material:PackIcon
                                        Kind="Play"
                                        Height="24"
                                        Width="24" />
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsAnimationPlaying}" Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="ToolTip" Value="{DynamicResource tip_animator_pause}"/>
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <material:PackIcon
                                                    Kind="Pause"
                                                    Height="24"
                                                    Width="24" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Padding="0" DockPanel.Dock="Left" Margin="8,0" Foreground="{DynamicResource MaterialDesignBody}"
                            HorizontalAlignment="Left" IsEnabled="{Binding IsAnimationGenerated}"
                            ToolTip="{DynamicResource tip_animator_nextFrame}" Click="NextFrame_Click" Background="{x:Null}" BorderBrush="{x:Null}">
                            <material:PackIcon
                            Kind="StepForward"
                            Height="24"
                            Width="24" />
                        </Button>
                    </DockPanel>
                </Grid>
            </Expander>
        </DockPanel>
    </material:Card>

    <Button Grid.Row="2" Grid.Column="1" Width="130" Margin="10,5" Click="Reset_Click"  Content="{DynamicResource reset}"
            Style="{StaticResource MaterialDesignRaisedDarkButton}" ToolTip="{DynamicResource tip_settings_abort}"/>

    <Button Grid.Row="2" Grid.Column="2" Width="130" Margin="10,5" Click="Save_Click"  Content="{DynamicResource save}"
            Style="{StaticResource MaterialDesignRaisedDarkButton}" ToolTip="{DynamicResource tip_settings_save}"
            IsEnabled="{Binding IsAnimationGenerated}"
                        Command="{x:Static material:DialogHost.OpenDialogCommand}">
        <Button.CommandParameter>
            <local:FilePicker DialogClosed="FolderPicker_DialogClosed"  Title="{DynamicResource sb_saveSliderball}" IsFolderSelect="True"/>
        </Button.CommandParameter>
    </Button>
    <material:Snackbar x:Name="snackbar" Grid.Row="2" Grid.ColumnSpan="3" MessageQueue="{material:MessageQueue}"/>
</Grid>
