<Grid x:Class="Osmo.UI.SkinSelect"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:converter="clr-namespace:Osmo.Converters"
             xmlns:vm="clr-namespace:Osmo.ViewModel"
             xmlns:controls="clr-namespace:Osmo.Controls"
             xmlns:local="clr-namespace:Osmo.UI"
             mc:Ignorable="d" PreviewKeyUp="Grid_PreviewKeyUp"
             d:DesignHeight="300" d:DesignWidth="700" Tag="{DynamicResource skinSelect_mySkins}" Loaded="Grid_Loaded">
    <Grid.DataContext>
        <vm:SkinSelectViewModel/>
    </Grid.DataContext>
    <Grid.Resources>
        <converter:SelectSkinSelector x:Key="SkinOptionSelector"/>

        <converter:IntToBooleanConverter x:Key="IntToBoolean"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <converter:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibility"/>
        <converter:DebugConverter x:Key="Debug"/>
    </Grid.Resources>
    <Grid.ColumnDefinitions>
        <ColumnDefinition Width="150"/>
        <ColumnDefinition Width="298*"/>
        <ColumnDefinition Width="150"/>
        <ColumnDefinition Width="150"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
        <RowDefinition/>
        <RowDefinition Height="12"/>
        <RowDefinition Height="42"/>
    </Grid.RowDefinitions>
    <!--<ScrollViewer Grid.ColumnSpan="4" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
        <UniformGrid x:Name="uniGrid_skins" Margin="4"/>
    </ScrollViewer>-->
    <DockPanel Grid.ColumnSpan="4">
        <StackPanel DockPanel.Dock="Bottom" Visibility="{Binding SkinManager.IsLoadingSkins, Converter={StaticResource BoolToVisibility}}">
            <TextBlock>
                <Run Text="{DynamicResource skinSelect_loadSkins}"/> <Run Text="{Binding SkinManager.SkinLoadStatusText, Mode=OneWay}"/>
            </TextBlock>
            <ProgressBar Value="{Binding SkinManager.SkinLoadCurrent}" 
                         Maximum="{Binding SkinManager.SkinLoadMaximum}"/>
        </StackPanel>
        <ListView x:Name="lv_skins" SelectionMode="Single" ItemsSource="{Binding Skins}" SelectedIndex="{Binding SelectedIndex}"
              MouseDoubleClick="Skins_PreviewMouseDoubleClick" MouseLeftButtonUp="Skins_PreviewMouseLeftButtonUp">
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Click="MenuItem_NewSkin_Click" Header="{DynamicResource newSkin_title}"/>
                    <!--<MenuItem Click="MenuItem_Import_Click" Header="{DynamicResource main_importSkin}"/>-->
                    <Separator/>
                    <MenuItem Click="MenuItem_OpenInEditor_Click" Header="{DynamicResource main_openInEditor}" IsEnabled="{Binding SkinOptionsEnabled}"/>
                    <MenuItem Click="MenuItem_OpenInExplorer_Click" Header="{DynamicResource main_openInExplorer}" IsEnabled="{Binding SkinOptionsEnabled}"/>
                    <MenuItem Click="MenuItem_OpenInMixer_Click" Header="{DynamicResource main_openInMixer}" IsEnabled="{Binding SkinOptionsEnabled}"/>
                    <MenuItem Click="MenuItem_ResizeTool_Click" Header="{DynamicResource menuItem_openInResizer}" IsEnabled="{Binding SkinOptionsEnabled}"/>
                    <Separator/>
                    <MenuItem Click="MenuItem_Export_Click" Header="{DynamicResource tip_skinSelect_export}" IsEnabled="{Binding SkinOptionsEnabled}" 
                              Command="{x:Static material:DialogHost.OpenDialogCommand}">
                        <MenuItem.CommandParameter>
                            <local:FilePicker Title="{DynamicResource skinSelect_exportTitle}" IsFolderSelect="True"
                                                          DialogClosed="FolderPicker_DialogClosed"/>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Click="MenuItem_Delete_Click" Header="{DynamicResource tip_skinSelect_delete}" IsEnabled="{Binding SkinOptionsEnabled}"/>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="{DynamicResource name}" Width="250">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <material:PackIcon Kind="Plus" Foreground="{DynamicResource PrimaryHueMidBrush}" Visibility="{Binding IsEmpty, Converter={StaticResource BoolToVisibility}}" Margin="0,0,8,0"/>
                                    <material:PackIcon x:Name="icon_alert" Kind="AlertOutline" Background="Transparent" Foreground="{DynamicResource ErrorBrushLight}" Visibility="{Binding SkinIniExists, Converter={StaticResource InverseBoolToVisibility}}" Margin="0,0,8,0" ToolTip="{DynamicResource tip_noSkinIni}"/>
                                    <TextBlock Text="{Binding Name}" x:Name="txt_name">
                                        <TextBlock.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                                                        <Setter Property="TextBlock.Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <!--<controls:ModeProgressImage Height="16" Width="16" Margin="8,0,0,-2.5" 
                                                                    Source="{StaticResource Mode_osu}"
                                                                    Progress="{Binding ProgressOsu}"
                                                                    ProgressHD="{Binding ProgressOsuHD}"/>
                                    <controls:ModeProgressImage Height="16" Width="16" Margin="4,0,0,-2.5" 
                                                                    Source="{StaticResource Mode_mania}"
                                                                    Progress="{Binding ProgressMania}"
                                                                    ProgressHD="{Binding ProgressManiaHD}"/>
                                    <controls:ModeProgressImage Height="16" Width="16" Margin="4,0,0,-2.5" 
                                                                    Source="{StaticResource Mode_taiko}"
                                                                    Progress="{Binding ProgressTaiko}"
                                                                    ProgressHD="{Binding ProgressTaikoHD}"/>
                                    <controls:ModeProgressImage Height="16" Width="16" Margin="4,0,0,-2.5" 
                                                                    Source="{StaticResource Mode_ctb}"
                                                                    Progress="{Binding ProgressCTB}"
                                                                    ProgressHD="{Binding ProgressCTBHD}"/>-->
                                </StackPanel>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsEmpty}" Value="True">
                                        <Setter TargetName="txt_name" Property="Text" Value="{DynamicResource newSkin_title}"/>
                                        <Setter TargetName="icon_alert" Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="{DynamicResource creator}" Width="200">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Author}" x:Name="txt_author"/>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsEmpty}" Value="True">
                                        <Setter TargetName="txt_author" Property="Text" Value=""/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="{DynamicResource header_elements}" Width="105">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ElementCount}" x:Name="txt_count"/>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsEmpty}" Value="True">
                                        <Setter TargetName="txt_count" Property="Text" Value=""/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="{DynamicResource delete}" Width="80">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Button Height="16" Width="16" Click="SkinDelete_Click"
                                    ToolTip="{DynamicResource tip_skinSelect_delete}" Padding="0" Tag="{Binding Path}"
                                    Visibility="{Binding IsEmpty, Converter={StaticResource InverseBoolToVisibility}}">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <material:PackIcon Kind="Delete" Height="16" Width="16"/>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <material:PackIcon Kind="DeleteEmpty" Height="16"
                                                                               Width="16"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="{DynamicResource export}" Width="95">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Button Height="16" Width="16" Click="Export_Click" Style="{StaticResource MaterialDesignFlatButton}"
                                    ToolTip="{DynamicResource tip_skinSelect_export}" Padding="0" Tag="{Binding Path}"
                                    Visibility="{Binding IsEmpty, Converter={StaticResource InverseBoolToVisibility}}"
                                    Command="{x:Static material:DialogHost.OpenDialogCommand}">
                                    <Button.CommandParameter>
                                        <local:FilePicker Title="{DynamicResource skinSelect_exportTitle}" IsFolderSelect="True"
                                                          DialogClosed="FolderPicker_DialogClosed"/>
                                    </Button.CommandParameter>
                                    <material:PackIcon Kind="PackageDown" Height="16" Width="16"/>
                                </Button>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
    </DockPanel>
    <!--<material:Snackbar MessageQueue="{material:MessageQueue}" x:Name="MainSnackbar"
                                            Grid.Row="1" />-->
    <Button x:Name="btn_loadSkin" Style="{StaticResource MaterialDesignRaisedDarkButton}" Click="LoadSkin_Click" Content="{DynamicResource loadSkin}"
                            ToolTip="{DynamicResource tip_skinSelect_load}" Grid.Row="2" IsEnabled="{Binding SelectedIndex, ConverterParameter=1, Converter={StaticResource IntToBoolean}, ElementName=lv_skins}" Margin="5"/>

    <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Command="{x:Static material:DialogHost.OpenDialogCommand}" Content="{DynamicResource newSkin}"
                            x:Name="btn_newSkin" ToolTip="{DynamicResource tip_skinSelect_new}" Grid.Column="2" Grid.Row="2" Margin="5">
        <Button.CommandParameter>
            <local:NewSkinDialog Margin="16" x:Name="dlg_newSkin"/>
        </Button.CommandParameter>
    </Button>
    <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Click="MixSkins_Click" IsEnabled="{Binding SelectedIndex, ConverterParameter=1, Converter={StaticResource IntToBoolean}, ElementName=lv_skins}"
                            ToolTip="{DynamicResource tip_skinSelect_mix}" Grid.Column="3" Grid.Row="2" Margin="5" Content="{DynamicResource mixSkins}"/>
</Grid>
