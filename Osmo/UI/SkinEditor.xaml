<Grid x:Class="Osmo.UI.SkinEditor" x:Name="container"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:Osmo.ViewModel"
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converter="clr-namespace:Osmo.Converters"
             xmlns:avalon="http://icsharpcode.net/sharpdevelop/avalonedit"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid.DataContext>
        <vm:SkinViewModel/>
    </Grid.DataContext>
    <Grid.Resources>
        <converter:FileTypeIconConverter x:Key="FileTypeToIcon"/>
        <converter:VolumeToIconConverter x:Key="VolumeToIcon"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>
    </Grid.Resources>
    <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" MinWidth="200"/>
        <ColumnDefinition Width="5"/>
        <ColumnDefinition Width="*" MinWidth="200"/>
    </Grid.ColumnDefinitions>
    <ListView x:Name="lv_elements" ItemsSource="{Binding LoadedSkin.Elements}" SelectionChanged="lv_elements_SelectionChanged">
        <ListView.View>
            <GridView>
                <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name" Width="200"/>
                <GridViewColumn Header="" Width="32">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <material:PackIcon
                                Kind="{Binding FileType, Converter={StaticResource FileTypeToIcon}, Mode=OneWay, FallbackValue=File}"
                                Height="24"
                                Width="24" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Header="" Width="32">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <material:PackIcon Visibility="{Binding IsHighDefinition, Converter={StaticResource BooleanToVisibility}}"
                                Kind="HighDefinition"
                                Height="24"
                                Width="24" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
            </GridView>
        </ListView.View>
    </ListView>
    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch"/>
    <Grid Grid.Column="2">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="125*"/>
            <ColumnDefinition Width="121*"/>
            <ColumnDefinition Width="111*"/>
            <ColumnDefinition Width="72"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="44"/>
            <RowDefinition Height="44"/>
        </Grid.RowDefinitions>
        <material:ColorZone VerticalAlignment="Stretch" Mode="Dark" Grid.ColumnSpan="4" Grid.RowSpan="2">
            <Grid>
                <Image Source="{Binding Image, UpdateSourceTrigger=PropertyChanged}"/>
                <material:PackIcon Kind="{Binding Icon}" Visibility="{Binding ShowIcon, FallbackValue=Hidden, TargetNullValue=Hidden}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="128" Height="128"/>
            </Grid>
        </material:ColorZone>

        <!--{Binding ShowEditor, TargetNullValue=Hidden, FallbackValue=Hidden}-->
        <avalon:TextEditor x:Name="textEditor" Visibility="{Binding ShowEditor, TargetNullValue=Hidden, FallbackValue=Hidden}" 
                           Grid.ColumnSpan="4" Grid.RowSpan="2" ShowLineNumbers="True" 
                           Loaded="TextEditor_Loaded"/>
        
        <!--{Binding PlayStatus}-->
        <material:Transitioner x:Name="transitioner" SnapsToDevicePixels="True" SelectedIndex="{Binding PlayStatus}" AutoApplyTransitionOrigins="True" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="4" ClipToBounds="False">
            <material:TransitionerSlide>
                <material:TransitionerSlide.ForwardWipe>
                    <material:CircleWipe />
                </material:TransitionerSlide.ForwardWipe>
                <material:ColorZone Height="44" Mode="Dark" VerticalAlignment="Bottom">
                    <Button Padding="0"
                            HorizontalAlignment="Left" IsEnabled="{Binding PlayEnabled}"
                            ToolTip="Play selected file" Click="Play_Click"
                                    Command="{x:Static material:Transitioner.MoveNextCommand}" Margin="16,0,0,0" Height="44" Width="44" Background="{x:Null}" BorderBrush="{x:Null}">
                        <material:PackIcon
                            Kind="Play"
                            Height="32"
                            Width="32" />
                    </Button>
                </material:ColorZone>
            </material:TransitionerSlide>
            <material:TransitionerSlide>
                <material:TransitionerSlide.BackwardWipe>
                    <material:CircleWipe />
                </material:TransitionerSlide.BackwardWipe>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="44"/>
                        <RowDefinition Height="44"/>
                    </Grid.RowDefinitions>
                    <material:ColorZone Mode="PrimaryDark" Grid.Row="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16"/>
                                <ColumnDefinition Width="48"/>
                                <ColumnDefinition Width="8"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="16"/>
                            </Grid.ColumnDefinitions>
                            <Button Padding="0" Grid.Column="1"
                            HorizontalAlignment="Left"
                            ToolTip="Pause playback" Click="Pause_Click"
                                    Command="{x:Static material:Transitioner.MovePreviousCommand}" Height="44" Width="44" Background="{x:Null}" BorderBrush="{x:Null}">
                                <material:PackIcon
                            Kind="Pause"
                            Height="32"
                            Width="32" />
                            </Button>
                            <StackPanel Orientation="Horizontal" Grid.Column="3" VerticalAlignment="Center">
                                <ToggleButton x:Name="cb_mute"
                                          Click="Mute_Click"
                                Style="{StaticResource MaterialDesignActionToggleButton}"
                                ToolTip="MaterialDesignActionLightToggleButton">
                                    <ToggleButton.Content>
                                        <material:PackIcon
                                        Kind="{Binding Value, ElementName=slider_volume, Converter={StaticResource VolumeToIcon}, FallbackValue=VolumeMedium}" />
                                    </ToggleButton.Content>
                                    <material:ToggleButtonAssist.OnContent>
                                        <material:PackIcon
                                        Kind="VolumeMute" />
                                    </material:ToggleButtonAssist.OnContent>
                                </ToggleButton>
                                <Slider x:Name="slider_volume" VerticalAlignment="Center" Margin="8,0"
                                    Minimum="0" Maximum="1" ToolTip="Volume slider" ValueChanged="slider_volume_ValueChanged"
                                    Value=".8" Width="150" SmallChange="0.01" LargeChange="0.1" TickFrequency="0.01"/>
                            </StackPanel>
                        </Grid>
                    </material:ColorZone>
                    <Slider  VerticalAlignment="Center" Foreground="{DynamicResource PrimaryHueMidBrush}"
                                    Minimum="0" Maximum="{Binding AudioLength}"
                                    Value="{Binding AudioPosition}" Margin="0,0,88,0"
                                 Grid.RowSpan="2"/>
                    <TextBlock VerticalAlignment="Bottom" Margin="16,4" Style="{StaticResource MaterialDesignBody1TextBlock}" Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}">
                        <Run Text="Currently playing: "/>
                        <Run Text="{Binding SelectedElement.Name}"/>
                    </TextBlock>
                </Grid>
            </material:TransitionerSlide>
        </material:Transitioner>

        <material:PopupBox Grid.Row="1" Grid.RowSpan="2" Grid.Column="2" Grid.ColumnSpan="2" Margin="16"
            Style="{StaticResource MaterialDesignMultiFloatingActionAccentPopupBox}"
            PlacementMode="TopAndAlignCentres" VerticalAlignment="Center" HorizontalAlignment="Right" PopupMode="Click">
            <material:PopupBox.ToggleCheckedContent>
                <material:PackIcon
                    Kind="Pencil"
                    Width="24"
                    Height="24" />
            </material:PopupBox.ToggleCheckedContent>
            <StackPanel>
                <Button ToolTip="Replace" Click="Replace_Click">
                    <material:PackIcon
                    Kind="FindReplace"
                    Width="24"
                    Height="24" />
                </Button>
                <Button ToolTip="Erase" Click="Erase_Click"
                    IsEnabled="{Binding IsEmptyEnabled}">
                    <material:PackIcon
                    Kind="EraserVariant"
                    Width="24"
                    Height="24" />
                </Button>
                <Button ToolTip="Reset" Click="Reset_Click">
                    <material:PackIcon
                    Kind="UndoVariant"
                    Width="24"
                    Height="24" IsEnabled="{Binding SelectedElement.MadeChanges}" />
                </Button>
                <Button ToolTip="Delete" Click="Delete_Click">
                    <material:PackIcon
                    Kind="Delete"
                    Width="24"
                    Height="24" />
                </Button>
            </StackPanel>
        </material:PopupBox>
    </Grid>
</Grid>
