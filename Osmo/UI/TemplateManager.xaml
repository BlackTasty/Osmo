<Grid
    x:Class="Osmo.UI.TemplateManager"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:Osmo.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Osmo.UI"
    xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:Osmo.ViewModel"
    d:DesignHeight="300"
    d:DesignWidth="700"
    PreviewKeyUp="Grid_PreviewKeyUp"
    Tag="{DynamicResource sidebar_templateManager}"
    mc:Ignorable="d">
    <Grid.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        <converter:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibility" />
        <converter:IntToBooleanConverter x:Key="IntToBoolean" />
    </Grid.Resources>
    <Grid.DataContext>
        <vm:TemplateManagerViewModel />
    </Grid.DataContext>
    <Grid.ColumnDefinitions>
        <ColumnDefinition Width="190" />
        <ColumnDefinition />
        <ColumnDefinition Width="190" />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="12" />
        <RowDefinition Height="42" />
    </Grid.RowDefinitions>
    <ListView SelectionMode="Single"
        x:Name="lv_templates"
        Grid.ColumnSpan="3"
        ItemsSource="{Binding Templates}"
        PreviewMouseDoubleClick="Templates_PreviewMouseDoubleClick"
        PreviewMouseLeftButtonUp="Templates_PreviewMouseLeftButtonUp">
        <ListView.View>
            <GridView>
                <GridViewColumn Width="200" Header="{DynamicResource name}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <material:PackIcon
                                    Margin="0,0,8,0"
                                    Foreground="{DynamicResource PrimaryHueMidBrush}"
                                    Kind="Plus"
                                    Visibility="{Binding IsEmpty, Converter={StaticResource BoolToVisibility}}" />
                                <TextBlock x:Name="txt_name" Text="{Binding Name}">
                                    <TextBlock.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                                                    <Setter Property="TextBlock.Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsEmpty}" Value="True">
                                    <Setter TargetName="txt_name" Property="Text" Value="{DynamicResource newTemplate_title}" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Width="80" Header="{DynamicResource delete}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Button
                                Width="16"
                                Height="16"
                                Padding="0"
                                Click="TemplateDelete_Click"
                                Tag="{Binding Name}"
                                ToolTip="{DynamicResource hint_deleteTemplate}"
                                Visibility="{Binding IsEmpty, Converter={StaticResource InverseBoolToVisibility}}">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <material:PackIcon
                                                    Width="16"
                                                    Height="16"
                                                    Kind="Delete" />
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <material:PackIcon
                                                            Width="16"
                                                            Height="16"
                                                            Kind="DeleteEmpty" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
            </GridView>
        </ListView.View>
    </ListView>

    <Button
        Grid.Row="2"
        Height="Auto"
        Margin="5"
        Click="EditTemplate_Click"
        Content="{DynamicResource loadTemplate}"
        IsEnabled="{Binding SelectedIndex, ConverterParameter=1, Converter={StaticResource IntToBoolean}, ElementName=lv_templates}"
        Style="{StaticResource MaterialDesignRaisedDarkButton}"
        ToolTip="{DynamicResource tip_templateManager_load}" />

    <Button
        x:Name="btn_newTemplate"
        Grid.Row="2"
        Grid.Column="2"
        Height="Auto"
        Margin="5"
        Command="{x:Static material:DialogHost.OpenDialogCommand}"
        Content="{DynamicResource newTemplate}"
        Style="{StaticResource MaterialDesignRaisedDarkButton}"
        ToolTip="{DynamicResource tip_templateManager_new}">
        <Button.CommandParameter>
            <local:NewTemplateDialog Margin="16" TemplateCreated="Dialog_TemplateCreated" />
        </Button.CommandParameter>
    </Button>
</Grid>
